'use client';

import { useEffect, useState } from 'react';

export default function DebugChatPage() {
  const [debugInfo, setDebugInfo] = useState<string[]>([]);
  const [chatElements, setChatElements] = useState<any>({});

  useEffect(() => {
    const logs: string[] = [];
    
    // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º console.log –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ UI
    const originalLog = console.log;
    const originalError = console.error;
    
    console.log = (...args) => {
      originalLog(...args);
      logs.push(`‚úÖ ${args.join(' ')}`);
      setDebugInfo([...logs]);
    };
    
    console.error = (...args) => {
      originalError(...args);
      logs.push(`‚ùå ${args.join(' ')}`);
      setDebugInfo([...logs]);
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —á–∞—Ç–∞ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
    const checkChatElements = () => {
      const elements = {
        chatButton: document.querySelector('.chat-button'),
        chatWidget: document.querySelector('.chat-widget'),
        chatContainer: document.querySelector('.chat-container'),
        chatHeader: document.querySelector('.chat-header'),
        chatMessages: document.querySelector('.chat-messages'),
        chatInput: document.querySelector('.chat-input'),
      };
      
      setChatElements(elements);
    };

    const interval = setInterval(checkChatElements, 2000);
    setTimeout(checkChatElements, 1000);

    return () => {
      console.log = originalLog;
      console.error = originalError;
      clearInterval(interval);
    };
  }, []);

  return (
    <div className="min-h-screen bg-gray-50 p-8">
      <div className="max-w-6xl mx-auto">
        <h1 className="text-3xl font-bold text-gray-900 mb-8">
          üîç –û—Ç–ª–∞–¥–∫–∞ —á–∞—Ç-–≤–∏–¥–∂–µ—Ç–∞
        </h1>
        
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* –õ–æ–≥–∏ */}
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-semibold mb-4">üìã –õ–æ–≥–∏ –∑–∞–≥—Ä—É–∑–∫–∏:</h2>
            <div className="bg-gray-100 p-4 rounded-lg max-h-96 overflow-y-auto">
              {debugInfo.length === 0 ? (
                <p className="text-gray-500">–û–∂–∏–¥–∞–Ω–∏–µ –ª–æ–≥–æ–≤...</p>
              ) : (
                debugInfo.map((log, index) => (
                  <div key={index} className="text-sm font-mono mb-1">
                    {log}
                  </div>
                ))
              )}
            </div>
          </div>

          {/* –≠–ª–µ–º–µ–Ω—Ç—ã —á–∞—Ç–∞ */}
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-semibold mb-4">üéØ –≠–ª–µ–º–µ–Ω—Ç—ã —á–∞—Ç–∞:</h2>
            <div className="space-y-2">
              {Object.entries(chatElements).map(([name, element]) => (
                <div key={name} className="flex items-center space-x-3">
                  <div className={`w-4 h-4 rounded-full ${element ? 'bg-green-500' : 'bg-red-500'}`}></div>
                  <span className="font-medium">{name}:</span>
                  <span className="text-sm text-gray-600">
                    {element ? '‚úÖ –ù–∞–π–¥–µ–Ω' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}
                  </span>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
        <div className="mt-8 bg-white rounded-lg shadow-lg p-6">
          <h2 className="text-xl font-semibold mb-4">üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</h2>
          <ol className="list-decimal list-inside space-y-2 text-gray-700">
            <li>–û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)</li>
            <li>–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –ª–æ–≥–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—ã—à–µ</li>
            <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã —á–∞—Ç–∞ –≤ –ø—Ä–∞–≤–æ–π –∫–æ–ª–æ–Ω–∫–µ</li>
            <li>–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –ø—Ä–∞–≤—ã–π –Ω–∏–∂–Ω–∏–π —É–≥–æ–ª - –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫–Ω–æ–ø–∫–∞ —á–∞—Ç–∞</li>
            <li>–ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ –Ω–µ—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏</li>
          </ol>
        </div>

        {/* –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ */}
        <div className="mt-8 bg-blue-50 rounded-lg p-6">
          <h2 className="text-xl font-semibold mb-4 text-blue-900">üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞:</h2>
          <button 
            onClick={() => {
              console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —á–∞—Ç-–≤–∏–¥–∂–µ—Ç–∞...');
              (window as any).ChatWidgetLoaded = false;
              const script = document.createElement('script');
              script.src = 'https://chat.lysechko-webdesign.com.ua/chat_widget.js';
              script.onload = () => {
                if (typeof (window as any).ChatWidget !== 'undefined') {
                  new (window as any).ChatWidget();
                  (window as any).ChatWidgetLoaded = true;
                  console.log('‚úÖ –ß–∞—Ç-–≤–∏–¥–∂–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω');
                }
              };
              document.body.appendChild(script);
            }}
            className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700"
          >
            –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —á–∞—Ç-–≤–∏–¥–∂–µ—Ç
          </button>
        </div>
      </div>
    </div>
  );
} 